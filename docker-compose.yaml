version: '3.9'

services:
  app:
    container_name: node
    build:
      context: .
      dockerfile: ./services/node/Dockerfile
    tty: true
    volumes:
      - type: bind
        source: ./src
        target: /usr/src/app
    depends_on:
      db:
        condition: service_healthy
    command: yarn dev
    environment:
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_NAME:-containerized_express_app}
      - DB_USERNAME=${DB_USER:-express}
      - DB_PASSWORD=${DB_PASS:-pa55w0rd}

  web:
    container_name: nginx
    build:
      context: .
      dockerfile: ./services/nginx/Dockerfile
    ports:
      - target: 80
        protocol: tcp
        mode: host
        published: ${WEB_PORT:-8080}
    depends_on:
      app:
        condition: service_started

  db:
    container_name: mysql
    build:
      context: .
      dockerfile: ./services/mysql/Dockerfile
    ports:
      - target: 3306
        protocol: tcp
        mode: host
        published: ${DB_PORT:-3306}
    restart: always
    volumes:
      - type: volume
        source: db-data
        target: /var/lib/mysql
        volume:
          nocopy: true
    healthcheck:
      test: mysqladmin ping -h localhost
      interval: 60s
      timeout: 5s
      retries: 3
      start_period: 15s
    environment:
      - MYSQL_DATABASE=${DB_NAME:-containerized_express_app}
      - MYSQL_USER=${DB_USER:-express}
      - MYSQL_PASSWORD=${DB_PASS:-pa55}
      - MYSQL_ROOT_PASSWORD=${DB_PASS:-pa55w0rd}

volumes:
  db-data:
